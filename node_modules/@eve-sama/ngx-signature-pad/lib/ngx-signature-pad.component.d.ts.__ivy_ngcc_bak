import { Renderer2, EventEmitter, OnInit, OnChanges, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';
import { IPointGroup } from 'signature_pad';
import { NgxSignatureOptions } from './types/ngx-signature-pad';
import { Overlay } from '@angular/cdk/overlay';
export declare class NgxSignaturePadComponent implements OnInit, OnChanges {
    private renderer2;
    private overlay;
    private viewContainerRef;
    private smallPad;
    private bigPad;
    private smallCanvas;
    private bigCanvas;
    private overlayRef;
    private portal;
    private signDataHistory;
    private fullScreenWidth;
    private fullScreenHeight;
    private _isEmpty;
    private isFullScreen;
    sectionHeight: number;
    private get activePad();
    options: NgxSignatureOptions;
    beginSign: EventEmitter<void>;
    endSign: EventEmitter<void>;
    fullScreenTpl: TemplateRef<void>;
    fullScreen(): void;
    miniScreen(): void;
    /** Returns signature image as an array of point groups */
    toData(): IPointGroup[];
    /** Draws signature image from an array of point groups */
    fromData(pointGroups: IPointGroup[]): void;
    toDataURL(type?: 'image/jpeg' | 'image/svg+xml'): string;
    revert(): void;
    clear(): void;
    /** Return true if canvas is empty, otherwise return false */
    isEmpty(): boolean;
    /** Set canvas's state as dirty */
    setDirty(): void;
    /** Set canvas's state as empty */
    setEmpty(): void;
    getContext(): CanvasRenderingContext2D;
    private initBigPad;
    private initSmallPad;
    private _onBegin;
    private _onEnd;
    private setPadAttribute;
    constructor(renderer2: Renderer2, overlay: Overlay, viewContainerRef: ViewContainerRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
}
