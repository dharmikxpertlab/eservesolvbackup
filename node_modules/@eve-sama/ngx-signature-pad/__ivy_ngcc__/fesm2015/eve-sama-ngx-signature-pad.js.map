{"version":3,"file":"eve-sama-ngx-signature-pad.js","sources":["../../src/lib/ngx-signature-pad.component.ts","../../src/lib/ngx-signature-pad.module.ts","../../src/public-api.ts","../../src/eve-sama-ngx-signature-pad.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  Component,\r\n  Renderer2,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnInit,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport SignaturePad, { IPointGroup } from 'signature_pad';\r\nimport { NgxSignatureOptions } from './types/ngx-signature-pad';\r\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\r\nimport { TemplatePortal } from '@angular/cdk/portal';\r\n\r\n@Component({\r\n  selector: 'ngx-signature-pad',\r\n  templateUrl: './ngx-signature-pad.component.html',\r\n  styleUrls: ['./ngx-signature-pad.component.scss']\r\n})\r\nexport class NgxSignaturePadComponent implements OnInit, OnChanges {\r\n  // #region The object of dependency 'siganture_pad'\r\n  private smallPad: SignaturePad;\r\n  private bigPad: SignaturePad;\r\n  // #endregion\r\n  // #region The object of canvas\r\n  private smallCanvas: HTMLCanvasElement;\r\n  private bigCanvas: HTMLCanvasElement;\r\n  // #endregion\r\n  // #region CDK\r\n  private overlayRef: OverlayRef;\r\n  private portal: TemplatePortal;\r\n  // #endregion\r\n  private signDataHistory: IPointGroup[] = [];\r\n  private fullScreenWidth: number;\r\n  private fullScreenHeight: number;\r\n  private _isEmpty = true;\r\n  private isFullScreen = false;\r\n\r\n  public sectionHeight: number;\r\n\r\n  private get activePad(): SignaturePad {\r\n    return this.isFullScreen ? this.bigPad : this.smallPad;\r\n  }\r\n\r\n  @Input() options: NgxSignatureOptions = {};\r\n\r\n  @Output() public beginSign = new EventEmitter<void>();\r\n  @Output() public endSign = new EventEmitter<void>();\r\n\r\n  @ViewChild('fullScreenTpl') fullScreenTpl: TemplateRef<void>;\r\n\r\n  public fullScreen(): void {\r\n    this.portal = new TemplatePortal(this.fullScreenTpl, this.viewContainerRef);\r\n    this.overlayRef = this.overlay.create({\r\n      positionStrategy: this.overlay.position().global(),\r\n      scrollStrategy: this.overlay.scrollStrategies.block(),\r\n      height: '100%',\r\n      width: '100%'\r\n    });\r\n    this.overlayRef.attach(this.portal);\r\n    this.initBigPad();\r\n    // #region Copy miniScreen's content to fullScreen\r\n    const { width: miniScreenWidth, height: miniScreenHeight } = this.options;\r\n    const ctx = this.bigCanvas.getContext('2d');\r\n    ctx.save();\r\n    ctx.translate(this.fullScreenWidth, 0);\r\n    ctx.rotate((90 * Math.PI) / 180);\r\n    ctx.drawImage(\r\n      this.smallCanvas,\r\n      0,\r\n      0,\r\n      miniScreenWidth,\r\n      miniScreenHeight,\r\n      0,\r\n      0,\r\n      this.fullScreenHeight,\r\n      this.fullScreenWidth\r\n    );\r\n    ctx.restore();\r\n    // #endregion\r\n    this.isFullScreen = true;\r\n  }\r\n\r\n  public miniScreen(): void {\r\n    this.smallPad.clear();\r\n    // #region Copy fullScreen's content to miniScreen\r\n    const { width: miniScreenWidth, height: miniScreenHeight } = this.options;\r\n    const widthScale = miniScreenWidth / this.fullScreenHeight;\r\n    const heightScale = miniScreenHeight / this.fullScreenWidth;\r\n    const ctx = this.smallCanvas.getContext('2d');\r\n    ctx.save();\r\n    ctx.translate(0, miniScreenHeight);\r\n    ctx.rotate((-90 * Math.PI) / 180);\r\n    ctx.drawImage(\r\n      this.bigCanvas,\r\n      0,\r\n      0,\r\n      this.fullScreenWidth,\r\n      this.fullScreenHeight,\r\n      0,\r\n      0,\r\n      this.fullScreenWidth * widthScale,\r\n      this.fullScreenHeight * heightScale\r\n    );\r\n    ctx.restore();\r\n    // #endregion\r\n    this.overlayRef.dispose();\r\n    this.bigCanvas = null;\r\n    this.bigPad = null;\r\n    this.isFullScreen = false;\r\n  }\r\n\r\n  /** Returns signature image as an array of point groups */\r\n  public toData(): IPointGroup[] {\r\n    return this.activePad.toData();\r\n  }\r\n\r\n  /** Draws signature image from an array of point groups */\r\n  public fromData(pointGroups: IPointGroup[]): void {\r\n    this.activePad.fromData(pointGroups);\r\n  }\r\n\r\n  public toDataURL(type?: 'image/jpeg' | 'image/svg+xml'): string {\r\n    switch (type) {\r\n      case 'image/jpeg':\r\n        return this.activePad.toDataURL('image/jpeg');\r\n      case 'image/svg+xml':\r\n        return this.activePad.toDataURL('image/svg+xml');\r\n      default:\r\n        return this.activePad.toDataURL();\r\n    }\r\n  }\r\n\r\n  public revert(): void {\r\n    this.signDataHistory.pop();\r\n    this.fromData(this.signDataHistory);\r\n    if (this.signDataHistory.length === 0) {\r\n      this.setEmpty();\r\n    }\r\n  }\r\n\r\n  // Clears the canvas\r\n  public clear(): void {\r\n    this.setEmpty();\r\n    this.signDataHistory = [];\r\n    this.activePad.clear();\r\n  }\r\n\r\n  /** Return true if canvas is empty, otherwise return false */\r\n  public isEmpty(): boolean {\r\n    return this._isEmpty;\r\n  }\r\n\r\n  /** Set canvas's state as dirty */\r\n  public setDirty(): void {\r\n    this._isEmpty = false;\r\n  }\r\n\r\n  /** Set canvas's state as empty */\r\n  public setEmpty(): void {\r\n    this._isEmpty = true;\r\n  }\r\n\r\n  public getContext(): CanvasRenderingContext2D {\r\n    return this.isFullScreen ? this.bigCanvas.getContext('2d') : this.smallCanvas.getContext('2d');\r\n  }\r\n\r\n  private initBigPad(): void {\r\n    this.bigCanvas = document.querySelector('#nsp-big');\r\n    const fullScreenOptions = JSON.parse(JSON.stringify(this.options));\r\n    // Calculate the fullScreen pad's size\r\n    this.fullScreenWidth = document.documentElement.clientWidth;\r\n    const { width: miniScreenWidth, height: miniScreenHeight } = this.options;\r\n    this.fullScreenHeight = (this.fullScreenWidth * miniScreenWidth) / miniScreenHeight;\r\n    // Calculate section size\r\n    const viewHeight = document.documentElement.clientHeight;\r\n    const space = viewHeight - this.fullScreenHeight;\r\n    this.sectionHeight = space / 2;\r\n    // Init pad\r\n    fullScreenOptions.width = this.fullScreenWidth;\r\n    fullScreenOptions.height = this.fullScreenHeight;\r\n    const { css } = fullScreenOptions;\r\n    this.bigCanvas.width = this.fullScreenWidth;\r\n    this.bigCanvas.height = this.fullScreenHeight;\r\n    for (const key in css) {\r\n      if (Object.prototype.hasOwnProperty.call(css, key)) {\r\n        const value = css[key];\r\n        this.renderer2.setStyle(this.bigCanvas, key, value);\r\n      }\r\n    }\r\n    this.bigPad = new SignaturePad(this.bigCanvas, fullScreenOptions);\r\n    this.bigPad.onBegin = this._onBegin.bind(this);\r\n    this.bigPad.onEnd = this._onEnd.bind(this);\r\n  }\r\n\r\n  private initSmallPad(): void {\r\n    this.smallCanvas = document.querySelector('#nsp-small');\r\n    const { width, height, css } = this.options;\r\n    this.options.width = width ? width : 300;\r\n    this.options.height = height ? height : 150;\r\n    this.smallCanvas.width = this.options.width;\r\n    this.smallCanvas.height = this.options.height;\r\n    for (const key in css) {\r\n      if (Object.prototype.hasOwnProperty.call(css, key)) {\r\n        const value = css[key];\r\n        this.renderer2.setStyle(this.smallCanvas, key, value);\r\n      }\r\n    }\r\n    this.smallPad = new SignaturePad(this.smallCanvas, this.options);\r\n    this.smallPad.onBegin = this._onBegin.bind(this);\r\n    this.smallPad.onEnd = this._onEnd.bind(this);\r\n  }\r\n\r\n  private _onBegin(): void {\r\n    this.setDirty(); // When user draws, set state as dirty\r\n    this.beginSign.emit();\r\n  }\r\n\r\n  private _onEnd(): void {\r\n    this.signDataHistory = this.toData();\r\n    this.endSign.emit();\r\n  }\r\n\r\n  private setPadAttribute(key: string, value: any): void {\r\n    if (this.bigPad) {\r\n      this.bigPad[key] = value;\r\n    }\r\n    this.smallPad[key] = value;\r\n  }\r\n\r\n  constructor(private renderer2: Renderer2, private overlay: Overlay, private viewContainerRef: ViewContainerRef) {}\r\n\r\n  ngOnInit(): void {\r\n    this.initSmallPad();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.options.firstChange) {\r\n      return;\r\n    }\r\n    const {\r\n      dotSize,\r\n      minWidth,\r\n      maxWidth,\r\n      throttle,\r\n      minDistance,\r\n      backgroundColor,\r\n      penColor,\r\n      velocityFilterWeight,\r\n      width,\r\n      height,\r\n      css\r\n    } = changes.options.currentValue;\r\n    if (dotSize) {\r\n      this.setPadAttribute('dotSize', dotSize);\r\n    }\r\n    if (minWidth) {\r\n      this.setPadAttribute('minWidth', minWidth);\r\n    }\r\n    if (maxWidth) {\r\n      this.setPadAttribute('maxWidth', maxWidth);\r\n    }\r\n    if (throttle) {\r\n      this.setPadAttribute('throttle', throttle);\r\n    }\r\n    if (minDistance) {\r\n      this.setPadAttribute('minDistance', minDistance);\r\n    }\r\n    if (backgroundColor) {\r\n      this.setPadAttribute('backgroundColor', backgroundColor);\r\n    }\r\n    if (penColor) {\r\n      this.setPadAttribute('penColor', penColor);\r\n    }\r\n    if (velocityFilterWeight) {\r\n      this.setPadAttribute('velocityFilterWeight', velocityFilterWeight);\r\n    }\r\n    if (width || height) {\r\n      const { width: previousWidth, height: previousHeight } = changes.options.previousValue;\r\n      const data = this.smallPad.toDataURL();\r\n      const image = new Image();\r\n      image.src = data;\r\n      image.onload = () => {\r\n        this.initSmallPad();\r\n        const ctx = this.smallCanvas.getContext('2d');\r\n        ctx.drawImage(image, 0, 0, previousWidth, previousHeight, 0, 0, width, height);\r\n      };\r\n    }\r\n    if (css) {\r\n      if (this.bigCanvas) {\r\n        for (const key in css) {\r\n          if (Object.prototype.hasOwnProperty.call(css, key)) {\r\n            const value = css[key];\r\n            this.renderer2.setStyle(this.bigCanvas, key, value);\r\n          }\r\n        }\r\n      }\r\n      if (this.smallCanvas) {\r\n        for (const key in css) {\r\n          if (Object.prototype.hasOwnProperty.call(css, key)) {\r\n            const value = css[key];\r\n            this.renderer2.setStyle(this.smallCanvas, key, value);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NgxSignaturePadComponent } from './ngx-signature-pad.component';\n\n@NgModule({\n  imports: [CommonModule, OverlayModule],\n  declarations: [NgxSignaturePadComponent],\n  exports: [NgxSignaturePadComponent]\n})\nexport class NgxSignaturePadModule {}\n","/*\n * Public API Surface of ngx-signature-pad\n */\n\nexport * from './lib/ngx-signature-pad.component';\nexport * from './lib/ngx-signature-pad.module';\nexport * from './lib/types/ngx-signature-pad';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}