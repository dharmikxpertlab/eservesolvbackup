{"version":3,"file":"capacitor.js","sources":["../build/legacy/legacy-web-plugin-merge.js","../build/logger.js","../build/util.js","../build/bridge.js","../build/runtime.js","../build/events.js","../build/vendor.js","../build/legacy/legacy-handlers.js","../build/global.js","../build/core-plugins.js","../build/web-plugin.js"],"sourcesContent":["export const legacyRegisterWebPlugin = (cap, webPlugin) => {\n    var _a;\n    const config = webPlugin.config;\n    const Plugins = cap.Plugins;\n    if (!config || !config.name) {\n        // TODO: add link to upgrade guide\n        throw new Error(`Capacitor WebPlugin is using the deprecated \"registerWebPlugin()\" function, but without the config. Please use \"registerPlugin()\" instead to register this web plugin.\"`);\n    }\n    // TODO: add link to upgrade guide\n    console.warn(`Capacitor plugin \"${config.name}\" is using the deprecated \"registerWebPlugin()\" function`);\n    if (!Plugins[config.name] || ((_a = config === null || config === void 0 ? void 0 : config.platforms) === null || _a === void 0 ? void 0 : _a.includes(cap.getPlatform()))) {\n        // Add the web plugin into the plugins registry if there already isn't\n        // an existing one. If it doesn't already exist, that means\n        // there's no existing native implementation for it.\n        // - OR -\n        // If we already have a plugin registered (meaning it was defined in the native layer),\n        // then we should only overwrite it if the corresponding web plugin activates on\n        // a certain platform. For example: Geolocation uses the WebPlugin on Android but not iOS\n        Plugins[config.name] = webPlugin;\n    }\n};\n//# sourceMappingURL=legacy-web-plugin-merge.js.map","const BRIDGED_CONSOLE_METHODS = [\n    'debug',\n    'error',\n    'info',\n    'log',\n    'trace',\n    'warn',\n];\nexport const initLogger = (win, cap) => {\n    // patch window.console on iOS and store original console fns\n    const isIos = cap.getPlatform() === 'ios';\n    const originalConsole = Object.assign({}, win.console);\n    if (win.console && isIos) {\n        for (const logfn of BRIDGED_CONSOLE_METHODS) {\n            win.console[logfn] = (...args) => {\n                const msgs = [...args];\n                originalConsole[logfn](...msgs);\n                try {\n                    cap.toNative('Console', 'log', {\n                        level: logfn,\n                        message: msgs.map(serializeConsoleMessage).join(' '),\n                    });\n                }\n                catch (e) {\n                    // error converting/posting console messages\n                    originalConsole.error(e);\n                }\n            };\n        }\n    }\n    cap.logToNative = createLogToNative(win.console);\n    cap.logFromNative = createLogFromNative(win.console);\n};\nconst serializeConsoleMessage = (msg) => {\n    if (typeof msg === 'object') {\n        try {\n            msg = JSON.stringify(msg);\n        }\n        catch (e) {\n            // ignore\n        }\n    }\n    return String(msg);\n};\nconst isFullConsole = (c) => {\n    if (!c) {\n        return false;\n    }\n    return (typeof c.groupCollapsed === 'function' ||\n        typeof c.groupEnd === 'function' ||\n        typeof c.dir === 'function');\n};\nconst createLogToNative = (c) => (call) => {\n    if (isFullConsole(c)) {\n        c.groupCollapsed('%cnative %c' +\n            call.pluginId +\n            '.' +\n            call.methodName +\n            ' (#' +\n            call.callbackId +\n            ')', 'font-weight: lighter; color: gray', 'font-weight: bold; color: #000');\n        c.dir(call);\n        c.groupEnd();\n    }\n    else {\n        c.log('LOG TO NATIVE: ', call);\n    }\n};\nconst createLogFromNative = (c) => (result) => {\n    if (isFullConsole(c)) {\n        const success = result.success === true;\n        const tagStyles = success\n            ? 'font-style: italic; font-weight: lighter; color: gray'\n            : 'font-style: italic; font-weight: lighter; color: red';\n        c.groupCollapsed('%cresult %c' +\n            result.pluginId +\n            '.' +\n            result.methodName +\n            ' (#' +\n            result.callbackId +\n            ')', tagStyles, 'font-style: italic; font-weight: bold; color: #444');\n        if (result.success === false) {\n            c.error(result.error);\n        }\n        else {\n            c.dir(result.data);\n        }\n        c.groupEnd();\n    }\n    else {\n        if (result.success === false) {\n            c.error('LOG FROM NATIVE', result.error);\n        }\n        else {\n            c.log('LOG FROM NATIVE', result.data);\n        }\n    }\n};\n//# sourceMappingURL=logger.js.map","export const convertFileSrcServerUrl = (webviewServerUrl, filePath) => {\n    if (typeof filePath === 'string') {\n        if (filePath.startsWith('/')) {\n            return webviewServerUrl + '/_capacitor_file_' + filePath;\n        }\n        if (filePath.startsWith('file://')) {\n            return (webviewServerUrl + filePath.replace('file://', '/_capacitor_file_'));\n        }\n        if (filePath.startsWith('content://')) {\n            return (webviewServerUrl + filePath.replace('content:/', '/_capacitor_content_'));\n        }\n    }\n    return filePath;\n};\nexport var ExceptionCode;\n(function (ExceptionCode) {\n    /**\n     * API is not implemented.\n     *\n     * This usually means the API can't be used because it is not implemented for\n     * the current platform.\n     */\n    ExceptionCode[\"Unimplemented\"] = \"UNIMPLEMENTED\";\n    /**\n     * API is not available.\n     *\n     * This means the API can't be used right now because:\n     *   - it is currently missing a prerequisite, such as network connectivity\n     *   - it requires a particular platform or browser version\n     */\n    ExceptionCode[\"Unavailable\"] = \"UNAVAILABLE\";\n})(ExceptionCode || (ExceptionCode = {}));\nexport class CapacitorException extends Error {\n    constructor(message, code) {\n        super(message);\n        this.message = message;\n        this.code = code;\n    }\n}\n//# sourceMappingURL=util.js.map","import { initLogger } from './logger';\nimport { CapacitorException, ExceptionCode } from './util';\nexport const initBridge = (win, cap) => {\n    var _a, _b;\n    // keep a collection of callbacks for native response data\n    const callbacks = new Map();\n    // Counter of callback ids, randomized to avoid\n    // any issues during reloads if a call comes back with\n    // an existing callback id from an old session\n    let callbackIdCount = Math.floor(Math.random() * 134217728);\n    let postToNative = null;\n    // create the postToNative() fn if needed\n    if (win.androidBridge) {\n        // android platform\n        postToNative = data => {\n            var _a;\n            try {\n                win.androidBridge.postMessage(JSON.stringify(data));\n            }\n            catch (e) {\n                (_a = win === null || win === void 0 ? void 0 : win.console) === null || _a === void 0 ? void 0 : _a.error(e);\n            }\n        };\n    }\n    else if ((_b = (_a = win.webkit) === null || _a === void 0 ? void 0 : _a.messageHandlers) === null || _b === void 0 ? void 0 : _b.bridge) {\n        // ios platform\n        postToNative = data => {\n            var _a, _b;\n            try {\n                data.type = (_a = data.type) !== null && _a !== void 0 ? _a : 'message';\n                win.webkit.messageHandlers.bridge.postMessage(data);\n            }\n            catch (e) {\n                (_b = win === null || win === void 0 ? void 0 : win.console) === null || _b === void 0 ? void 0 : _b.error(e);\n            }\n        };\n    }\n    cap.handleWindowError = (msg, url, lineNo, columnNo, err) => {\n        const str = msg.toLowerCase();\n        if (str.indexOf('script error') > -1) {\n            // Some IE issue?\n        }\n        else {\n            const errObj = {\n                type: 'js.error',\n                error: {\n                    message: msg,\n                    url: url,\n                    line: lineNo,\n                    col: columnNo,\n                    errorObject: JSON.stringify(err),\n                },\n            };\n            if (err !== null) {\n                cap.handleError(err);\n            }\n            if (postToNative) {\n                postToNative(errObj);\n            }\n        }\n        return false;\n    };\n    if (cap.DEBUG) {\n        window.onerror = cap.handleWindowError;\n    }\n    initLogger(win, cap);\n    /**\n     * Send a plugin method call to the native layer\n     */\n    cap.toNative = (pluginName, methodName, options, storedCallback) => {\n        var _a, _b;\n        try {\n            if (typeof postToNative === 'function') {\n                let callbackId = '-1';\n                if (storedCallback &&\n                    (typeof storedCallback.callback === 'function' ||\n                        typeof storedCallback.resolve === 'function')) {\n                    // store the call for later lookup\n                    callbackId = String(++callbackIdCount);\n                    callbacks.set(callbackId, storedCallback);\n                }\n                const callData = {\n                    callbackId: callbackId,\n                    pluginId: pluginName,\n                    methodName: methodName,\n                    options: options || {},\n                };\n                if (cap.DEBUG && pluginName !== 'Console') {\n                    cap.logToNative(callData);\n                }\n                // post the call data to native\n                postToNative(callData);\n                return callbackId;\n            }\n            else {\n                (_a = win === null || win === void 0 ? void 0 : win.console) === null || _a === void 0 ? void 0 : _a.warn(`implementation unavailable for: ${pluginName}`);\n            }\n        }\n        catch (e) {\n            (_b = win === null || win === void 0 ? void 0 : win.console) === null || _b === void 0 ? void 0 : _b.error(e);\n        }\n        return null;\n    };\n    /**\n     * Process a response from the native layer.\n     */\n    cap.fromNative = (result) => {\n        var _a, _b;\n        if (cap.DEBUG && result.pluginId !== 'Console') {\n            cap.logFromNative(result);\n        }\n        // get the stored call, if it exists\n        try {\n            const storedCall = callbacks.get(result.callbackId);\n            if (storedCall) {\n                // looks like we've got a stored call\n                if (result.error) {\n                    // ensure stacktraces by copying error properties to an Error\n                    result.error = Object.keys(result.error).reduce((err, key) => {\n                        err[key] = result.error[key];\n                        return err;\n                    }, new cap.Exception(''));\n                }\n                if (typeof storedCall.callback === 'function') {\n                    // callback\n                    if (result.success) {\n                        storedCall.callback(result.data);\n                    }\n                    else {\n                        storedCall.callback(null, result.error);\n                    }\n                }\n                else if (typeof storedCall.resolve === 'function') {\n                    // promise\n                    if (result.success) {\n                        storedCall.resolve(result.data);\n                    }\n                    else {\n                        storedCall.reject(result.error);\n                    }\n                    // no need to keep this stored callback\n                    // around for a one time resolve promise\n                    callbacks.delete(result.callbackId);\n                }\n            }\n            else if (!result.success && result.error) {\n                // no stored callback, but if there was an error let's log it\n                (_a = win === null || win === void 0 ? void 0 : win.console) === null || _a === void 0 ? void 0 : _a.warn(result.error);\n            }\n            if (result.save === false) {\n                callbacks.delete(result.callbackId);\n            }\n        }\n        catch (e) {\n            (_b = win === null || win === void 0 ? void 0 : win.console) === null || _b === void 0 ? void 0 : _b.error(e);\n        }\n        // always delete to prevent memory leaks\n        // overkill but we're not sure what apps will do with this data\n        delete result.data;\n        delete result.error;\n    };\n    if (typeof postToNative === 'function') {\n        // toNative bridge found\n        cap.nativeCallback = (pluginName, methodName, options, callback) => {\n            if (typeof options === 'function') {\n                console.warn(`Using a callback as the 'options' parameter of 'nativeCallback()' is deprecated.`);\n                callback = options;\n                options = null;\n            }\n            return cap.toNative(pluginName, methodName, options, { callback });\n        };\n        cap.nativePromise = (pluginName, methodName, options) => {\n            return new Promise((resolve, reject) => {\n                cap.toNative(pluginName, methodName, options, {\n                    resolve: resolve,\n                    reject: reject,\n                });\n            });\n        };\n    }\n    else {\n        // no native bridge created\n        cap.nativeCallback = () => {\n            throw new CapacitorException(`nativeCallback() not implemented`, ExceptionCode.Unimplemented);\n        };\n        cap.nativePromise = () => Promise.reject(new CapacitorException(`nativePromise() not implemented`, ExceptionCode.Unimplemented));\n    }\n};\nexport const getPlatformId = (win) => {\n    var _a, _b;\n    if (win.androidBridge) {\n        return 'android';\n    }\n    if ((_b = (_a = win.webkit) === null || _a === void 0 ? void 0 : _a.messageHandlers) === null || _b === void 0 ? void 0 : _b.bridge) {\n        return 'ios';\n    }\n    return 'web';\n};\n//# sourceMappingURL=bridge.js.map","import { getPlatformId, initBridge } from './bridge';\nimport { initEvents } from './events';\nimport { initLegacyHandlers } from './legacy/legacy-handlers';\nimport { CapacitorException, convertFileSrcServerUrl, ExceptionCode, } from './util';\nimport { initVendor } from './vendor';\nexport const createCapacitor = (win) => {\n    const cap = win.Capacitor || {};\n    const Plugins = (cap.Plugins = cap.Plugins || {});\n    const webviewServerUrl = typeof win.WEBVIEW_SERVER_URL === 'string' ? win.WEBVIEW_SERVER_URL : '';\n    const getPlatform = () => getPlatformId(win);\n    const isNativePlatform = () => getPlatformId(win) !== 'web';\n    const isPluginAvailable = (pluginName) => {\n        const plugin = registeredPlugins.get(pluginName);\n        if (plugin === null || plugin === void 0 ? void 0 : plugin.platforms.has(getPlatform())) {\n            // JS implementation available for the current platform.\n            return true;\n        }\n        if (getPluginHeader(pluginName)) {\n            // Native implementation available.\n            return true;\n        }\n        return false;\n    };\n    const getPluginHeader = (pluginName) => { var _a; return (_a = cap.PluginHeaders) === null || _a === void 0 ? void 0 : _a.find(h => h.name === pluginName); };\n    const convertFileSrc = (filePath) => convertFileSrcServerUrl(webviewServerUrl, filePath);\n    const logJs = (msg, level) => {\n        switch (level) {\n            case 'error':\n                win.console.error(msg);\n                break;\n            case 'warn':\n                win.console.warn(msg);\n                break;\n            case 'info':\n                win.console.info(msg);\n                break;\n            default:\n                win.console.log(msg);\n        }\n    };\n    const handleError = (err) => win.console.error(err);\n    const pluginMethodNoop = (_target, prop, pluginName) => {\n        return Promise.reject(`${pluginName} does not have an implementation of \"${prop}\".`);\n    };\n    const registeredPlugins = new Map();\n    const registerPlugin = (pluginName, jsImplementations = {}) => {\n        const registeredPlugin = registeredPlugins.get(pluginName);\n        if (registeredPlugin) {\n            console.warn(`Capacitor plugin \"${pluginName}\" already registered. Cannot register plugins twice.`);\n            return registeredPlugin.proxy;\n        }\n        const platform = getPlatform();\n        const pluginHeader = getPluginHeader(pluginName);\n        let jsImplementation;\n        const loadPluginImplementation = async () => {\n            if (!jsImplementation && platform in jsImplementations) {\n                jsImplementation =\n                    typeof jsImplementations[platform] === 'function'\n                        ? (jsImplementation = await jsImplementations[platform]())\n                        : (jsImplementation = jsImplementations[platform]);\n            }\n            return jsImplementation;\n        };\n        const createPluginMethod = (impl, prop) => {\n            var _a;\n            if (impl) {\n                return (_a = impl[prop]) === null || _a === void 0 ? void 0 : _a.bind(impl);\n            }\n            else if (pluginHeader) {\n                const methodHeader = pluginHeader.methods.find(m => prop === m.name);\n                if (methodHeader) {\n                    if (methodHeader.rtype === 'promise') {\n                        return (options) => cap.nativePromise(pluginName, prop.toString(), options);\n                    }\n                    else {\n                        return (options, callback) => cap.nativeCallback(pluginName, prop.toString(), options, callback);\n                    }\n                }\n            }\n            else {\n                throw new CapacitorException(`\"${pluginName}\" plugin is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n            }\n        };\n        const createPluginMethodWrapper = (prop) => {\n            let remove;\n            const wrapper = (...args) => {\n                const p = loadPluginImplementation().then(impl => {\n                    const fn = createPluginMethod(impl, prop);\n                    if (fn) {\n                        const p = fn(...args);\n                        remove = p === null || p === void 0 ? void 0 : p.remove;\n                        return p;\n                    }\n                    else {\n                        throw new CapacitorException(`\"${pluginName}.${prop}()\" is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n                    }\n                });\n                if (prop === 'addListener') {\n                    p.remove = async () => remove();\n                }\n                return p;\n            };\n            // Some flair ✨\n            wrapper.toString = () => `${prop.toString()}() { [capacitor code] }`;\n            Object.defineProperty(wrapper, 'name', {\n                value: prop,\n                writable: false,\n                configurable: false,\n            });\n            return wrapper;\n        };\n        const addListener = createPluginMethodWrapper('addListener');\n        const removeListener = createPluginMethodWrapper('removeListener');\n        const addListenerNative = (eventName, callback) => {\n            const call = addListener({ eventName }, callback);\n            const remove = async () => {\n                const callbackId = await call;\n                removeListener({\n                    eventName,\n                    callbackId,\n                }, callback);\n            };\n            const p = new Promise(resolve => call.then(() => resolve({ remove })));\n            p.remove = async () => {\n                console.warn(`Using addListener() without 'await' is deprecated.`);\n                await remove();\n            };\n            return p;\n        };\n        const proxy = new Proxy({}, {\n            get(_, prop) {\n                switch (prop) {\n                    // https://github.com/facebook/react/issues/20030\n                    case '$$typeof':\n                        return undefined;\n                    case 'addListener':\n                        return isNativePlatform() ? addListenerNative : addListener;\n                    case 'removeListener':\n                        return removeListener;\n                    default:\n                        return createPluginMethodWrapper(prop);\n                }\n            },\n        });\n        Plugins[pluginName] = proxy;\n        registeredPlugins.set(pluginName, {\n            name: pluginName,\n            proxy,\n            platforms: new Set([\n                ...Object.keys(jsImplementations),\n                ...(pluginHeader ? [platform] : []),\n            ]),\n        });\n        return proxy;\n    };\n    cap.convertFileSrc = convertFileSrc;\n    cap.getPlatform = getPlatform;\n    cap.getServerUrl = () => webviewServerUrl;\n    cap.handleError = handleError;\n    cap.isNativePlatform = isNativePlatform;\n    cap.isPluginAvailable = isPluginAvailable;\n    cap.logJs = logJs;\n    cap.pluginMethodNoop = pluginMethodNoop;\n    cap.registerPlugin = registerPlugin;\n    cap.Exception = CapacitorException;\n    cap.DEBUG = !!cap.DEBUG;\n    initBridge(win, cap);\n    initEvents(win, cap);\n    initVendor(win, cap);\n    initLegacyHandlers(win, cap);\n    return cap;\n};\nexport const initCapacitorGlobal = (win) => (win.Capacitor = createCapacitor(win));\n//# sourceMappingURL=runtime.js.map","export const initEvents = (win, cap) => {\n    const doc = win.document;\n    const cordova = win.cordova;\n    cap.addListener = (pluginName, eventName, callback) => {\n        const callbackId = cap.nativeCallback(pluginName, 'addListener', {\n            eventName: eventName,\n        }, callback);\n        return {\n            remove: async () => {\n                var _a;\n                (_a = win === null || win === void 0 ? void 0 : win.console) === null || _a === void 0 ? void 0 : _a.debug('Removing listener', pluginName, eventName);\n                cap.removeListener(pluginName, callbackId, eventName, callback);\n            },\n        };\n    };\n    cap.removeListener = (pluginName, callbackId, eventName, callback) => {\n        cap.nativeCallback(pluginName, 'removeListener', {\n            callbackId: callbackId,\n            eventName: eventName,\n        }, callback);\n    };\n    cap.createEvent = (eventName, eventData) => {\n        if (doc) {\n            const ev = doc.createEvent('Events');\n            ev.initEvent(eventName, false, false);\n            if (eventData && typeof eventData === 'object') {\n                for (const i in eventData) {\n                    // eslint-disable-next-line no-prototype-builtins\n                    if (eventData.hasOwnProperty(i)) {\n                        ev[i] = eventData[i];\n                    }\n                }\n            }\n            return ev;\n        }\n        return null;\n    };\n    cap.triggerEvent = (eventName, target, eventData) => {\n        eventData = eventData || {};\n        const ev = cap.createEvent(eventName, eventData);\n        if (ev) {\n            if (target === 'document') {\n                if (cordova === null || cordova === void 0 ? void 0 : cordova.fireDocumentEvent) {\n                    cordova.fireDocumentEvent(eventName, eventData);\n                    return true;\n                }\n                else if (doc === null || doc === void 0 ? void 0 : doc.dispatchEvent) {\n                    return doc.dispatchEvent(ev);\n                }\n            }\n            else if (target === 'window' && win.dispatchEvent) {\n                return win.dispatchEvent(ev);\n            }\n            else if (doc === null || doc === void 0 ? void 0 : doc.querySelector) {\n                const targetEl = doc.querySelector(target);\n                if (targetEl) {\n                    return targetEl.dispatchEvent(ev);\n                }\n            }\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=events.js.map","export const initVendor = (win, cap) => {\n    const Ionic = (win.Ionic = win.Ionic || {});\n    const IonicWebView = (Ionic.WebView = Ionic.WebView || {});\n    const Plugins = cap.Plugins;\n    IonicWebView.getServerBasePath = (callback) => {\n        var _a;\n        (_a = Plugins === null || Plugins === void 0 ? void 0 : Plugins.WebView) === null || _a === void 0 ? void 0 : _a.getServerBasePath().then(result => {\n            callback(result.path);\n        });\n    };\n    IonicWebView.setServerBasePath = (path) => {\n        var _a;\n        (_a = Plugins === null || Plugins === void 0 ? void 0 : Plugins.WebView) === null || _a === void 0 ? void 0 : _a.setServerBasePath({ path });\n    };\n    IonicWebView.persistServerBasePath = () => {\n        var _a;\n        (_a = Plugins === null || Plugins === void 0 ? void 0 : Plugins.WebView) === null || _a === void 0 ? void 0 : _a.persistServerBasePath();\n    };\n    IonicWebView.convertFileSrc = (url) => cap.convertFileSrc(url);\n};\n//# sourceMappingURL=vendor.js.map","export const initLegacyHandlers = (win, cap) => {\n    if (cap.isNativePlatform()) {\n        // define cordova if it's not there already\n        win.cordova = win.cordova || {};\n        const doc = win.document;\n        const nav = win.navigator;\n        if (nav) {\n            nav.app = nav.app || {};\n            nav.app.exitApp = () => {\n                cap.nativeCallback('App', 'exitApp', {});\n            };\n        }\n        if (doc) {\n            const docAddEventListener = doc.addEventListener;\n            doc.addEventListener = (...args) => {\n                const eventName = args[0];\n                const handler = args[1];\n                if (eventName === 'deviceready' && handler) {\n                    Promise.resolve().then(handler);\n                }\n                else if (eventName === 'backbutton' && cap.Plugins.App) {\n                    // Add a dummy listener so Capacitor doesn't do the default\n                    // back button action\n                    cap.Plugins.App.addListener('backButton', () => {\n                        // ignore\n                    });\n                }\n                return docAddEventListener.apply(doc, args);\n            };\n        }\n    }\n    // deprecated in v3, remove from v4\n    cap.platform = cap.getPlatform();\n    cap.isNative = cap.isNativePlatform();\n};\n//# sourceMappingURL=legacy-handlers.js.map","import { legacyRegisterWebPlugin } from './legacy/legacy-web-plugin-merge';\nimport { initCapacitorGlobal } from './runtime';\nexport const Capacitor = /*#__PURE__*/ initCapacitorGlobal((typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n        ? self\n        : typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : {}));\nexport const registerPlugin = Capacitor.registerPlugin;\n/**\n * @deprecated Provided for backwards compatibility for Capacitor v2 plugins.\n * Capacitor v3 plugins should import the plugin directly. This \"Plugins\"\n * export is deprecated in v3, and will be removed in v4.\n */\nexport const Plugins = Capacitor.Plugins;\n/**\n * Provided for backwards compatibility. Use the registerPlugin() API\n * instead, and provide the web plugin as the \"web\" implmenetation.\n * For example\n *\n * export const Example = registerPlugin('Example', {\n *   web: () => import('./web').then(m => new m.Example())\n * })\n *\n * @deprecated Deprecated in v3, will be removed from v4.\n */\nexport const registerWebPlugin = (plugin) => legacyRegisterWebPlugin(Capacitor, plugin);\n//# sourceMappingURL=global.js.map","import { registerPlugin } from './global';\nexport const WebView = /*#__PURE__*/ registerPlugin('WebView');\n//# sourceMappingURL=core-plugins.js.map","import { Capacitor } from './global';\nimport { ExceptionCode } from './util';\n/**\n * Base class web plugins should extend.\n */\nexport class WebPlugin {\n    constructor(config) {\n        this.listeners = {};\n        this.windowListeners = {};\n        if (config) {\n            // TODO: add link to upgrade guide\n            console.warn(`Capacitor WebPlugin \"${config.name}\" config object was deprecated in v3 and will be removed in v4.`);\n            this.config = config;\n        }\n    }\n    addListener(eventName, listenerFunc) {\n        const listeners = this.listeners[eventName];\n        if (!listeners) {\n            this.listeners[eventName] = [];\n        }\n        this.listeners[eventName].push(listenerFunc);\n        // If we haven't added a window listener for this event and it requires one,\n        // go ahead and add it\n        const windowListener = this.windowListeners[eventName];\n        if (windowListener && !windowListener.registered) {\n            this.addWindowListener(windowListener);\n        }\n        const remove = async () => this.removeListener(eventName, listenerFunc);\n        const p = Promise.resolve({ remove });\n        Object.defineProperty(p, 'remove', {\n            value: async () => {\n                console.warn(`Using addListener() without 'await' is deprecated.`);\n                await remove();\n            },\n        });\n        return p;\n    }\n    async removeAllListeners() {\n        this.listeners = {};\n        for (const listener in this.windowListeners) {\n            this.removeWindowListener(this.windowListeners[listener]);\n        }\n        this.windowListeners = {};\n    }\n    notifyListeners(eventName, data) {\n        const listeners = this.listeners[eventName];\n        if (listeners) {\n            listeners.forEach(listener => listener(data));\n        }\n    }\n    hasListeners(eventName) {\n        return !!this.listeners[eventName].length;\n    }\n    registerWindowListener(windowEventName, pluginEventName) {\n        this.windowListeners[pluginEventName] = {\n            registered: false,\n            windowEventName,\n            pluginEventName,\n            handler: event => {\n                this.notifyListeners(pluginEventName, event);\n            },\n        };\n    }\n    unimplemented(msg = 'not implemented') {\n        return new Capacitor.Exception(msg, ExceptionCode.Unimplemented);\n    }\n    unavailable(msg = 'not available') {\n        return new Capacitor.Exception(msg, ExceptionCode.Unavailable);\n    }\n    async removeListener(eventName, listenerFunc) {\n        const listeners = this.listeners[eventName];\n        if (!listeners) {\n            return;\n        }\n        const index = listeners.indexOf(listenerFunc);\n        this.listeners[eventName].splice(index, 1);\n        // If there are no more listeners for this type of event,\n        // remove the window listener\n        if (!this.listeners[eventName].length) {\n            this.removeWindowListener(this.windowListeners[eventName]);\n        }\n    }\n    addWindowListener(handle) {\n        window.addEventListener(handle.windowEventName, handle.handler);\n        handle.registered = true;\n    }\n    removeWindowListener(handle) {\n        if (!handle) {\n            return;\n        }\n        window.removeEventListener(handle.windowEventName, handle.handler);\n        handle.registered = false;\n    }\n}\n//# sourceMappingURL=web-plugin.js.map"],"names":["BRIDGED_CONSOLE_METHODS","serializeConsoleMessage","msg","JSON","stringify","e","String","isFullConsole","c","groupCollapsed","groupEnd","dir","createLogToNative","call","pluginId","methodName","callbackId","log","createLogFromNative","result","tagStyles","success","error","data","ExceptionCode","CapacitorException","Error","[object Object]","message","code","super","this","initBridge","win","cap","_a","_b","callbacks","Map","callbackIdCount","Math","floor","random","postToNative","androidBridge","postMessage","console","webkit","messageHandlers","bridge","type","handleWindowError","url","lineNo","columnNo","err","toLowerCase","indexOf","errObj","line","col","errorObject","handleError","DEBUG","window","onerror","isIos","getPlatform","originalConsole","Object","assign","logfn","args","msgs","toNative","level","map","join","logToNative","logFromNative","initLogger","pluginName","options","storedCallback","callback","resolve","set","callData","warn","fromNative","storedCall","get","keys","reduce","key","Exception","reject","delete","save","nativeCallback","nativePromise","Promise","Unimplemented","getPlatformId","createCapacitor","Capacitor","Plugins","webviewServerUrl","WEBVIEW_SERVER_URL","isNativePlatform","getPluginHeader","PluginHeaders","find","h","name","registeredPlugins","convertFileSrc","filePath","startsWith","replace","convertFileSrcServerUrl","getServerUrl","isPluginAvailable","plugin","platforms","has","logJs","info","pluginMethodNoop","_target","prop","registerPlugin","jsImplementations","registeredPlugin","proxy","platform","pluginHeader","jsImplementation","createPluginMethodWrapper","remove","wrapper","p","async","loadPluginImplementation","then","impl","fn","bind","methodHeader","methods","m","rtype","toString","createPluginMethod","defineProperty","value","writable","configurable","addListener","removeListener","addListenerNative","eventName","Proxy","_","Set","doc","document","cordova","debug","createEvent","eventData","ev","initEvent","i","hasOwnProperty","triggerEvent","target","fireDocumentEvent","dispatchEvent","querySelector","targetEl","initEvents","Ionic","IonicWebView","WebView","getServerBasePath","path","setServerBasePath","persistServerBasePath","initVendor","nav","navigator","app","exitApp","docAddEventListener","addEventListener","handler","App","apply","isNative","initLegacyHandlers","initCapacitorGlobal","globalThis","self","global","config","listeners","windowListeners","listenerFunc","push","windowListener","registered","addWindowListener","listener","removeWindowListener","forEach","length","windowEventName","pluginEventName","event","notifyListeners","Unavailable","index","splice","handle","removeEventListener","webPlugin","includes","legacyRegisterWebPlugin"],"mappings":"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"}