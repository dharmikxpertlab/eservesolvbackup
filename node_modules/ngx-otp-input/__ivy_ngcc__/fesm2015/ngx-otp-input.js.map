{"version":3,"file":"ngx-otp-input.js","sources":["../../../projects/ngx-otp-input/src/lib/component/ngx-otp-input.component.ts","../../../projects/ngx-otp-input/src/lib/pattern.directive.ts","../../../projects/ngx-otp-input/src/lib/ngx-otp-input.module.ts","../../../projects/ngx-otp-input/src/public-api.ts","../../../projects/ngx-otp-input/src/ngx-otp-input.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChildren,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { NgxOtpInputConfig, NgxOtpStatus } from './ngx-otp-input.model';\nimport { FormArray, FormControl, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'ngx-otp-input',\n  templateUrl: './ngx-otp-input.component.html',\n  styleUrls: ['./ngx-otp-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NgxOtpInputComponent\n  implements OnInit, AfterViewInit, OnChanges, OnDestroy {\n  private ngxOtpArray = new FormArray([]);\n  private ngxOtpArray$: Subscription;\n  private focusedInputHasValue = false;\n  private lastFocus = 0;\n  private defaultAriaLabel = 'One time password input';\n  private ngxOtpStatus: NgxOtpStatus;\n\n  ariaLabels = [];\n  classList = [];\n  pattern: RegExp;\n\n  get ngxOtpArrayControls(): FormControl[] {\n    return this.ngxOtpArray.controls as FormControl[];\n  }\n\n  @Input() config: NgxOtpInputConfig;\n  @Input() disable = false;\n\n  @Input() set status(status: NgxOtpStatus) {\n    this.ngxOtpStatus = status;\n    this.setInputClasses();\n  }\n\n  @Output() otpChange: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() fill: EventEmitter<string> = new EventEmitter<string>();\n\n  @ViewChildren('otpInputElement') otpInputElements: QueryList<ElementRef>;\n\n  @HostListener('paste', ['$event']) onPaste(event: ClipboardEvent): void {\n    event.preventDefault();\n    this.setValue(event.clipboardData.getData('text'));\n  }\n\n  ngOnInit(): void {\n    this.setUpOtpForm();\n    this.setUpAriaLabels();\n    this.setInputClasses();\n    this.otpFormChangeListener();\n    this.handleDisable(this.disable);\n\n    if (this.config.autoblur === undefined) {\n      this.config.autoblur = true;\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (this.config.numericInputMode || !this.config.pattern) {\n      this.otpInputElements.map((element) => {\n        element.nativeElement.setAttribute('inputmode', 'numeric');\n        element.nativeElement.setAttribute('pattern', '[0-9]*');\n      });\n    }\n\n    if (this.config.autofocus) {\n      this.setFocus(0);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('disable')) {\n      this.handleDisable(this.disable);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.ngxOtpArray$.unsubscribe();\n  }\n\n  getAriaLabelByIndex(index: number): string {\n    return this.ariaLabels[index]\n      ? this.ariaLabels[index]\n      : this.defaultAriaLabel;\n  }\n\n  handleFocus(index: number): void {\n    this.lastFocus = index;\n    this.getInputElementByIndex(index).select();\n  }\n\n  handleKeyup(value: string, index: number): void {\n    if (this.pattern.test(value) && value !== 'Backspace') {\n      this.getFormControlByIndex(index).setValue(value); // prevent fast type errors\n      this.stepForward(index);\n    } else if (value === 'Backspace') {\n      this.stepBackward(index);\n    }\n\n    this.setInputClasses();\n  }\n\n  handleKeydown(index: number): void {\n    this.focusedInputHasValue = !!this.getFormControlByIndex(index).value;\n  }\n\n  handleLeftArrow(index: number): void {\n    if (index > 0) {\n      this.setFocus(index - 1);\n    }\n  }\n\n  handleRightArrow(index: number): void {\n    if (index < this.config.otpLength - 1) {\n      this.setFocus(index + 1);\n    }\n  }\n\n  clear(): void {\n    this.ngxOtpArray.reset();\n    this.setInputClasses();\n  }\n\n  private setUpOtpForm(): void {\n    for (let i = 0; i < this.config.otpLength; i++) {\n      this.ngxOtpArray.push(new FormControl(null, [Validators.required]));\n    }\n\n    this.pattern = this.config.pattern || /^\\d+$/;\n  }\n\n  private setUpAriaLabels(): void {\n    if (this.config.ariaLabels) {\n      Array.isArray(this.config.ariaLabels)\n        ? (this.ariaLabels = this.config.ariaLabels)\n        : (this.ariaLabels = new Array(this.config.otpLength).fill(\n            this.config.ariaLabels\n          ));\n    }\n  }\n\n  private setInputClasses(): void {\n    const inputEntry = [];\n    const classList = this.config.classList;\n\n    for (let i = 0; i < this.config.otpLength; i++) {\n      const isFilled = this.isInputFilled(i)\n        ? this.config.classList?.inputFilled || ''\n        : '';\n\n      const isDisabled = this.disable\n        ? this.config.classList?.inputDisabled || 'ngx-otp-input-disabled'\n        : '';\n\n      let status: string | string[] = '';\n\n      if (this.ngxOtpStatus === 'success') {\n        status = this.config.classList.inputSuccess;\n      } else if (this.ngxOtpStatus === 'error') {\n        status = this.config.classList.inputError;\n      }\n\n      inputEntry[i] = [classList?.input || '', isFilled, isDisabled, status];\n    }\n\n    this.classList = inputEntry;\n  }\n\n  private setValue(value: string): void {\n    if (this.pattern.test(value)) {\n      let lastIndex = 0;\n      value\n        .split('')\n        .slice(0, this.config.otpLength)\n        .map((character: string, index: number) => {\n          this.getFormControlByIndex(index).setValue(character);\n          lastIndex = index;\n        });\n\n      this.setInputClasses();\n      this.setFocusAfterValueSet(lastIndex);\n    }\n  }\n\n  private handleDisable(disable: boolean): void {\n    disable ? this.ngxOtpArray?.disable() : this.ngxOtpArray?.enable();\n    this.setInputClasses();\n  }\n\n  private stepForward(index: number): void {\n    if (this.ngxOtpArray.valid && this.config.autoblur) {\n      this.removeFocus(index);\n    } else if (index < this.config.otpLength - 1) {\n      this.setFocus(index + 1);\n    }\n  }\n\n  private stepBackward(index: number): void {\n    if (!this.focusedInputHasValue && index > 0) {\n      this.setFocus(index - 1);\n    }\n  }\n\n  private setFocusAfterValueSet(lastIndex: number): void {\n    if (lastIndex < this.config.otpLength - 1) {\n      this.setFocus(lastIndex + 1);\n    } else {\n      this.removeFocus(this.lastFocus);\n    }\n  }\n\n  private setFocus(index: number): void {\n    this.getInputElementByIndex(index).focus();\n  }\n\n  private removeFocus(index: number): void {\n    this.getInputElementByIndex(index).blur();\n  }\n\n  private isInputFilled(index: number): boolean {\n    return this.getFormControlByIndex(index)?.valid;\n  }\n\n  private getInputElementByIndex(index: number): any {\n    return this.otpInputElements.toArray()[index].nativeElement;\n  }\n\n  private getFormControlByIndex(index: number): FormControl {\n    return this.ngxOtpArray.controls[index] as FormControl;\n  }\n\n  private otpFormChangeListener(): void {\n    this.ngxOtpArray$ = this.ngxOtpArray.valueChanges.subscribe((values) => {\n      this.otpChange.emit(values);\n\n      if (this.ngxOtpArray.valid) {\n        this.fill.emit(values.join(''));\n      }\n    });\n  }\n}\n","import { Directive, HostListener, Input } from '@angular/core';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[ngxOtpPattern]',\n})\nexport class PatternDirective {\n  // allowed keys apart from numeric characters\n  private allowedKeys = [\n    'Backspace',\n    'ArrowLeft',\n    'ArrowRight',\n    'Escape',\n    'Tab',\n  ];\n\n  @Input('ngxOtpPattern') pattern: RegExp;\n\n  @HostListener('keydown', ['$event']) onKeyDown(e: KeyboardEvent): void {\n    if (\n      this.allowedKeys.includes(e.key) ||\n      (e.key === 'a' && e.ctrlKey === true) || // Allow: Ctrl+A\n      (e.key === 'c' && e.ctrlKey === true) || // Allow: Ctrl+C\n      (e.key === 'v' && e.ctrlKey === true) || // Allow: Ctrl+V\n      (e.key === 'x' && e.ctrlKey === true) || // Allow: Ctrl+X\n      (e.key === 'a' && e.metaKey === true) || // Cmd+A (Mac)\n      (e.key === 'c' && e.metaKey === true) || // Cmd+C (Mac)\n      (e.key === 'v' && e.metaKey === true) || // Cmd+V (Mac)\n      (e.key === 'x' && e.metaKey === true) // Cmd+X (Mac)\n    ) {\n      return; // let it happen, don't do anything\n    } else if (!this.pattern.test(e.key)) {\n      e.preventDefault();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxOtpInputComponent } from './component/ngx-otp-input.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { PatternDirective } from './pattern.directive';\n\n@NgModule({\n  declarations: [NgxOtpInputComponent, PatternDirective],\n  imports: [ReactiveFormsModule, FormsModule, CommonModule],\n  exports: [NgxOtpInputComponent],\n})\nexport class NgxOtpInputModule {}\n","/*\n * Public API Surface of ngx-otp-input\n */\n\nexport * from './lib/component/ngx-otp-input.component';\nexport * from './lib/component/ngx-otp-input.model';\nexport * from './lib/ngx-otp-input.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {PatternDirective as ɵa} from './lib/pattern.directive';"]}