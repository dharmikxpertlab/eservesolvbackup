{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{wzPO:function(e,t,a){\"use strict\";a.r(t),a.d(t,\"CameraWeb\",function(){return o}),a.d(t,\"Camera\",function(){return s});var r=a(\"FUe0\"),n=a(\"dTEF\");class o extends r.c{async getPhoto(e){return new Promise(async(t,a)=>{if(e.webUseInput)this.fileInputExperience(e,t);else if(customElements.get(\"pwa-camera-modal\")){const o=document.createElement(\"pwa-camera-modal\");document.body.appendChild(o);try{await o.componentOnReady(),o.addEventListener(\"onPhoto\",async n=>{const s=n.detail;null===s?a(new r.b(\"User cancelled photos app\")):s instanceof Error?a(s):t(await this._getCameraPhoto(s,e)),o.dismiss(),document.body.removeChild(o)}),o.present()}catch(n){this.fileInputExperience(e,t)}}else console.error(\"Unable to load PWA Element 'pwa-camera-modal'. See the docs: https://capacitorjs.com/docs/pwa-elements.\"),this.fileInputExperience(e,t)})}fileInputExperience(e,t){let a=document.querySelector(\"#_capacitor-camera-input\");const r=()=>{var e;null===(e=a.parentNode)||void 0===e||e.removeChild(a)};a||(a=document.createElement(\"input\"),a.id=\"_capacitor-camera-input\",a.type=\"file\",document.body.appendChild(a)),a.accept=\"image/*\",a.capture=!0,e.source===n.b.Photos||e.source===n.b.Prompt?a.removeAttribute(\"capture\"):e.direction===n.a.Front?a.capture=\"user\":e.direction===n.a.Rear&&(a.capture=\"environment\"),a.addEventListener(\"change\",n=>{const o=a.files[0];let s=\"jpeg\";if(\"image/png\"===o.type?s=\"png\":\"image/gif\"===o.type&&(s=\"gif\"),\"dataUrl\"===e.resultType||\"base64\"===e.resultType){const a=new FileReader;a.addEventListener(\"load\",()=>{if(\"dataUrl\"===e.resultType)t({dataUrl:a.result,format:s});else if(\"base64\"===e.resultType){const e=a.result.split(\",\")[1];t({base64String:e,format:s})}r()}),a.readAsDataURL(o)}else t({webPath:URL.createObjectURL(o),format:s}),r()}),a.click()}_getCameraPhoto(e,t){return new Promise((a,r)=>{const n=new FileReader,o=e.type.split(\"/\")[1];\"uri\"===t.resultType?a({webPath:URL.createObjectURL(e),format:o}):(n.readAsDataURL(e),n.onloadend=()=>{const e=n.result;a(\"dataUrl\"===t.resultType?{dataUrl:e,format:o}:{base64String:e.split(\",\")[1],format:o})},n.onerror=e=>{r(e)})})}async checkPermissions(){if(\"undefined\"==typeof navigator||!navigator.permissions)throw this.unavailable(\"Permissions API not available in this browser\");try{return{camera:(await window.navigator.permissions.query({name:\"camera\"})).state,photos:\"granted\"}}catch(e){throw this.unavailable(\"Camera permissions are not available in this browser\")}}async requestPermissions(){throw this.unimplemented(\"Not implemented on web.\")}}const s=new o}}]);","name":"61.ec23d1c84ea401748258.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[61],{\n\n/***/ \"wzPO\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CameraWeb\", function() { return CameraWeb; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Camera\", function() { return Camera; });\n/* harmony import */ var _capacitor_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"FUe0\");\n/* harmony import */ var _definitions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"dTEF\");\n\n\nclass CameraWeb extends _capacitor_core__WEBPACK_IMPORTED_MODULE_0__[/* WebPlugin */ \"c\"] {\n    async getPhoto(options) {\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise(async (resolve, reject) => {\n            if (options.webUseInput) {\n                this.fileInputExperience(options, resolve);\n            }\n            else {\n                if (customElements.get('pwa-camera-modal')) {\n                    const cameraModal = document.createElement('pwa-camera-modal');\n                    document.body.appendChild(cameraModal);\n                    try {\n                        await cameraModal.componentOnReady();\n                        cameraModal.addEventListener('onPhoto', async (e) => {\n                            const photo = e.detail;\n                            if (photo === null) {\n                                reject(new _capacitor_core__WEBPACK_IMPORTED_MODULE_0__[/* CapacitorException */ \"b\"]('User cancelled photos app'));\n                            }\n                            else if (photo instanceof Error) {\n                                reject(photo);\n                            }\n                            else {\n                                resolve(await this._getCameraPhoto(photo, options));\n                            }\n                            cameraModal.dismiss();\n                            document.body.removeChild(cameraModal);\n                        });\n                        cameraModal.present();\n                    }\n                    catch (e) {\n                        this.fileInputExperience(options, resolve);\n                    }\n                }\n                else {\n                    console.error(`Unable to load PWA Element 'pwa-camera-modal'. See the docs: https://capacitorjs.com/docs/pwa-elements.`);\n                    this.fileInputExperience(options, resolve);\n                }\n            }\n        });\n    }\n    fileInputExperience(options, resolve) {\n        let input = document.querySelector('#_capacitor-camera-input');\n        const cleanup = () => {\n            var _a;\n            (_a = input.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(input);\n        };\n        if (!input) {\n            input = document.createElement('input');\n            input.id = '_capacitor-camera-input';\n            input.type = 'file';\n            document.body.appendChild(input);\n        }\n        input.accept = 'image/*';\n        input.capture = true;\n        if (options.source === _definitions__WEBPACK_IMPORTED_MODULE_1__[/* CameraSource */ \"b\"].Photos ||\n            options.source === _definitions__WEBPACK_IMPORTED_MODULE_1__[/* CameraSource */ \"b\"].Prompt) {\n            input.removeAttribute('capture');\n        }\n        else if (options.direction === _definitions__WEBPACK_IMPORTED_MODULE_1__[/* CameraDirection */ \"a\"].Front) {\n            input.capture = 'user';\n        }\n        else if (options.direction === _definitions__WEBPACK_IMPORTED_MODULE_1__[/* CameraDirection */ \"a\"].Rear) {\n            input.capture = 'environment';\n        }\n        input.addEventListener('change', (_e) => {\n            const file = input.files[0];\n            let format = 'jpeg';\n            if (file.type === 'image/png') {\n                format = 'png';\n            }\n            else if (file.type === 'image/gif') {\n                format = 'gif';\n            }\n            if (options.resultType === 'dataUrl' || options.resultType === 'base64') {\n                const reader = new FileReader();\n                reader.addEventListener('load', () => {\n                    if (options.resultType === 'dataUrl') {\n                        resolve({\n                            dataUrl: reader.result,\n                            format,\n                        });\n                    }\n                    else if (options.resultType === 'base64') {\n                        const b64 = reader.result.split(',')[1];\n                        resolve({\n                            base64String: b64,\n                            format,\n                        });\n                    }\n                    cleanup();\n                });\n                reader.readAsDataURL(file);\n            }\n            else {\n                resolve({\n                    webPath: URL.createObjectURL(file),\n                    format: format,\n                });\n                cleanup();\n            }\n        });\n        input.click();\n    }\n    _getCameraPhoto(photo, options) {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            const format = photo.type.split('/')[1];\n            if (options.resultType === 'uri') {\n                resolve({\n                    webPath: URL.createObjectURL(photo),\n                    format: format,\n                });\n            }\n            else {\n                reader.readAsDataURL(photo);\n                reader.onloadend = () => {\n                    const r = reader.result;\n                    if (options.resultType === 'dataUrl') {\n                        resolve({\n                            dataUrl: r,\n                            format: format,\n                        });\n                    }\n                    else {\n                        resolve({\n                            base64String: r.split(',')[1],\n                            format: format,\n                        });\n                    }\n                };\n                reader.onerror = e => {\n                    reject(e);\n                };\n            }\n        });\n    }\n    async checkPermissions() {\n        if (typeof navigator === 'undefined' || !navigator.permissions) {\n            throw this.unavailable('Permissions API not available in this browser');\n        }\n        try {\n            // https://developer.mozilla.org/en-US/docs/Web/API/Permissions/query\n            // the specific permissions that are supported varies among browsers that implement the\n            // permissions API, so we need a try/catch in case 'camera' is invalid\n            const permission = await window.navigator.permissions.query({\n                name: 'camera',\n            });\n            return {\n                camera: permission.state,\n                photos: 'granted',\n            };\n        }\n        catch (_a) {\n            throw this.unavailable('Camera permissions are not available in this browser');\n        }\n    }\n    async requestPermissions() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n}\nconst Camera = new CameraWeb();\n\n//# sourceMappingURL=web.js.map\n\n/***/ })\n\n}]);","inputSourceMap":null}